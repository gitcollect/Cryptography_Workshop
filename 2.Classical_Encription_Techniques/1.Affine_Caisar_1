Aufgabe:

	A generalization of the Caesar cipher, known as the affine Caesar cipher, has the following form: 
	For each plaintext letter p, substitute the ciphertext letter C:

	C = E([a, b], p) = (ap + b) mod 26

	A basic requirement of any encryption algorithm is that it be one-to-one. That is, if p != q , then E(k, p) != E(k, q).  
	Otherwise, decryption is impossible, because more than one plaintext character maps into the same ciphertext character. 
	The affine Caesar cipher is not one-to-one for all values of a. For example, for a = 2 and b = 3, then E([a, b], 0) = E([a, b], 13) = 3.

	Which values of a and b are allowed for a one-to-one affine Caesar Cipher?

Lösung:

	Um eine Rückwärtseindeutigkeit herzustellen, beziehungsweise eine eindeutige one-to-one-Beziehung können folgende Werte für a und b genutzt werden:

	works for: a = 1
	works for: a = 3
	works for: a = 5
	works for: a = 7
	works for: a = 9
	works for: a = 11
	works for: a = 15
	works for: a = 17
	works for: a = 19
	works for: a = 21
	works for: a = 23

	Alle Werte von b sind möglich.

	Für a gelten alle Werte, die keinen gemeinsamen Teiler mit der Obergrenze (also 26) haben. Also geht 13 auch nicht.


	Quelltext zum Berechnen:

	#!/usr/bin/python
	import random
	import time
		
	def encrypt(a, b, p):
		return chr((ord(p)*a + b) % 26)

	alphabet = "abcdefghijklmnopqrstuvwxyz"
	result = ""
	error = False
	b = 1
	count = 0

	for a in range(0,26):
		for b in range(0,26):
			error = False
			result = ""
			for char in alphabet:
				newChar = encrypt(a,b,char)
				if newChar in result:
					error = True
					break
				else:
					result = result + newChar
			if not error:
				print "works for: a = " + str(a) + " and " + str(b)
				count += 1
			
	print count
